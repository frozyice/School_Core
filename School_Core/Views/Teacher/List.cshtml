@model School_Core.ViewModels.Teachers.TeacherListViewModel

@{
    ViewData["Title"] = "View";
}

@if (Model.IsRedirectedWithSuccess)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <strong>Succsess!</strong>
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

@if (!ViewContext.ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <strong>Failed!</strong> <span asp-validation-for="alert"></span>
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

<h1 style="color:@Model.HeadingColor">@Model.HeadingTitle</h1>

<div class="container">
    <div class="row">
        <div class="col">

            <table class="table">
                <thead>
                <tr>
                    <th>Name</th>
                    <th>Lecture</th>
                    <th></th>
                </tr>
                </thead>
                <tbody>
                @foreach (var teacher in Model.Teachers)
                {
                    <tr>
                        <td>
                            @teacher.Name
                        </td>
                        <td>
                            @teacher.LectureName
                        </td>
                        <td>
                            <a class="btn btn-outline-primary" asp-controller="Teacher" asp-action="AssignToLecture" asp-route-teacherId="@teacher.Id" method="post">Assign to Lecture</a>
                        </td>
                    </tr>
                }
                </tbody>
            </table>

        </div>
    </div>
    <div style="margin-top:20px">

        @await Component.InvokeAsync("Counter", new {color = Model.HeadingColor})
    </div>
</div>