@model School_Core.ViewModels.Lectures.LectureListViewModel

@{
    ViewData["Title"] = @Model.HeadingTitle;
}
@if (Model.IsRedirectedWithSuccess)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <strong>Succsess!</strong>
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

@if (!ViewContext.ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <strong>Failed!</strong> <span asp-validation-for="alert"></span>
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

<h1 style="color:@Model.HeadingColor">@Model.HeadingTitle</h1>

<div class="container">
    <div class="row">
        <div class="col">

            <table class="table">
                <thead>
                <tr>
                    <th>Name</th>
                    <th>Status</th>
                    <th></th>
                    <th></th>
                </tr>
                </thead>
                <tbody>
                @foreach (var lecture in Model.LectureViewModels)
                {
                    <tr>
                        <td>
                            @Html.ActionLink(lecture.Name, "Details", "Lecture", new {id = lecture.Id})
                        </td>
                        <td>
                            @lecture.Status
                        </td>

                        <td>
                            <a class="btn btn-outline-danger" asp-controller="Lecture" asp-action="CloseLecture" asp-route-id="@lecture.Id">Close Enrollment</a>
                        </td>
                        <td>
                            <a class="btn btn-outline-secondary" asp-controller="Lecture" asp-action="ArchiveLecture" asp-route-id="@lecture.Id">Archive</a>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    </div>
    <label for="counterToggle">Show Counter</label>
    <input id="counterToggle" type="checkbox" data-bind="checked: shouldShowCounter"/>
    <div data-bind="visible: shouldShowCounter" style="margin-top:20px">
        @await Component.InvokeAsync("Counter", new {color = Model.HeadingColor})
    </div>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/knockout/3.4.0/knockout-min.js"></script>

<script>
    function AppViewModel() {
    this.shouldShowCounter = ko.observable(true);
    }

    ko.applyBindings(new AppViewModel());
</script>